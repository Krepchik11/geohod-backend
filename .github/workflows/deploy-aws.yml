name: Build and Deploy to AWS with Docker Compose

on:
  release:
    types:
      - published
  workflow_dispatch:

jobs:
  build:
    name: Build and Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '23'
          cache: 'gradle'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build
        run: ./gradlew clean build --no-daemon -x test

      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container

      - name: Build and export
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./.github/Dockerfile
          tags: |
            geohod-backend:latest
            geohod-backend:${{ github.ref_name }}
          outputs: type=docker,dest=./image.tar

      - name: Transfer image to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ vars.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          source: ./image.tar
          target: /tmp/geohod-backend/
          overwrite: true
          rm: true

      - name: Transfer Docker Compose files
        uses: appleboy/scp-action@master
        with:
          host: ${{ vars.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          source: |
            docker-compose.yml
          target: ~/geohod-backend/
          overwrite: true
          strip_components: 1

      - name: Create .env file on VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            # Create application directory
            mkdir -p ~/geohod-backend
            
            # Create .env file from GitHub secrets and variables
            cat > ~/geohod-backend/.env << EOF
            POSTGRES_DB=${{ secrets.POSTGRES_DB }}
            POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}
            TELEGRAM_BOT_USERNAME=${{ secrets.TELEGRAM_BOT_USERNAME }}
            CORS_ALLOWED_ORIGINS=${{ vars.CORS_ALLOWED_ORIGINS }}
            GEOHOD_CREATED_EVENT_LINK_TEMPLATE=${{ vars.GEOHOD_CREATED_EVENT_LINK_TEMPLATE }}
            GEOHOD_REVIEW_LINK_TEMPLATE=${{ vars.GEOHOD_REVIEW_LINK_TEMPLATE }}
            EOF

      - name: Deploy with Docker Compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd ~/geohod-backend
            
            # Load the new image
            docker load < /tmp/geohod-backend/image.tar
            
            # Ensure volumes exist (create if they don't)
            docker volume inspect geohod_postgres_data >/dev/null 2>&1 || docker volume create geohod_postgres_data
            
            # Stop existing services
            docker compose down || true
            
            # Start services with new image
            docker compose up -d
            
            # Wait for services to be healthy
            echo "Waiting for services to start..."
            sleep 30
            
            # Check service health
            docker compose ps
            
            # Clean up old images
            docker image prune -f

      - name: Cleanup local files
        if: always()
        run: |
          rm -f ./image.tar
          ./gradlew clean
