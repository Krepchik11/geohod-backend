x-healthcheck-common: &health-common
  interval: 10s
  timeout: 3s
  retries: 10
  start_period: 20s

services:
  postgres:
    image: docker.io/library/postgres:17-alpine
    container_name: geohod-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      TZ: ${TZ:-UTC}
    volumes:
      - geohod_postgres_data_dev:/var/lib/postgresql/data:Z
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U \"$POSTGRES_USER\" -d \"$POSTGRES_DB\" -h 127.0.0.1 -p 5432"]
      <<: *health-common
    ports:
      - "5432:5432"

  app:
    build:
      context: .
      dockerfile: .github/Dockerfile
    image: geohod-backend:dev-local
    container_name: geohod-app
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-dev}
      TZ: ${TZ:-UTC}
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL:-jdbc:postgresql://postgres:5432/geohod}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME:-geohod_user}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD:-geohod_password}
      SPRING_SQL_INIT_MODE: ${SPRING_SQL_INIT_MODE:-never}
      SPRING_LIQUIBASE_ENABLED: ${SPRING_LIQUIBASE_ENABLED:-true}
      SERVER_PORT: ${SERVER_PORT:-8080}
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      TELEGRAM_BOT_USERNAME: ${TELEGRAM_BOT_USERNAME}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
    ports:
      - "8081:8080"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:8080/actuator/health | grep -q '\"status\":\"UP\"'"]
      <<: *health-common

volumes:
  geohod_postgres_data_dev:
    name: geohod_postgres_data_dev
    labels:
      geohod.role: "postgres-data"