# Production Environment Docker Compose Configuration
# Project: geohod-prod

services:
  geohod-app:
    image: geohod-backend:latest
    container_name: geohod-backend-prod
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-prod:5432/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - GEOHOD_TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - GEOHOD_TELEGRAM_BOT_USERNAME=${TELEGRAM_BOT_USERNAME}
      - GEOHOD_CREATED_EVENT_LINK_TEMPLATE=${GEOHOD_CREATED_EVENT_LINK_TEMPLATE}
      - GEOHOD_REVIEW_LINK_TEMPLATE=${GEOHOD_REVIEW_LINK_TEMPLATE}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - SPRING_DATASOURCE_HIKARI_MAXIMUM_POOL_SIZE=20
      - LOGGING_LEVEL_ROOT=INFO
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,info,metrics
    depends_on:
      postgres-prod:
        condition: service_healthy
    networks:
      - geohod-prod-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    # deploy:
    #   resources:
    #     limits:
    #       memory: 2G
    #       cpus: '1.5'
    #     reservations:
    #       memory: 1G
    #       cpus: '0.5'

  postgres-prod:
    image: postgres:17-alpine
    container_name: geohod-postgres-prod
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
    volumes:
      - geohod_postgres_data_prod:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - geohod-prod-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    # deploy:
    #   resources:
    #     limits:
    #       memory: 1G
    #       cpus: '1.0'
    #     reservations:
    #       memory: 512M
    #       cpus: '0.3'

volumes:
  geohod_postgres_data_prod:
    external: true

networks:
  geohod-prod-network:
    name: geohod-prod-network
    driver: bridge