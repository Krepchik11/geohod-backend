version: '4'

pods:
  geohod-dev-pod:
    network: geohod-dev-network
    hostname: geohod-dev
    labels:
      - "environment=development"
      - "project=geohod"
      - "version=dev"

services:
  geohod-app-dev:
    image: geohod-backend:dev-latest
    container_name: geohod-backend-dev
    pod: geohod-dev-pod
    restart: unless-stopped
    ports:
      - "8081:8080"
      - "5005:5005"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://localhost:5432/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - GEOHOD_TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - GEOHOD_TELEGRAM_BOT_USERNAME=${TELEGRAM_BOT_USERNAME}
      - GEOHOD_CREATED_EVENT_LINK_TEMPLATE=${GEOHOD_CREATED_EVENT_LINK_TEMPLATE}
      - GEOHOD_REVIEW_LINK_TEMPLATE=${GEOHOD_REVIEW_LINK_TEMPLATE}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - SPRING_DATASOURCE_HIKARI_MAXIMUM_POOL_SIZE=3
      - LOGGING_LEVEL_ROOT=INFO
      - LOGGING_LEVEL_ME_GEOHOD=DEBUG
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,info,metrics
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 45s
      timeout: 15s
      retries: 3
      start_period: 90s
    annotations:
      - "io.podman.description=Geohod backend dev app"
      
  postgres-dev:
    image: docker.io/library/postgres:17-alpine
    container_name: geohod-postgres-dev
    pod: geohod-dev-pod
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    command: >
      postgres
    volumes:
      - geohod_postgres_data_dev:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 45s
    annotations:
      - "io.podman.description=Geohod backend dev db"

volumes:
  geohod_postgres_data_dev:
    external: true

networks:
  geohod-dev-network:
    name: geohod-dev-network
    driver: bridge